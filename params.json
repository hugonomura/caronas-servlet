{"name":"Tutorial Ajax + Servlet Java","tagline":"","body":"# Referências\r\n\r\n* http://api.jquery.com/jQuery.ajax/\r\n* http://api.jquery.com/change/\r\n* https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/change\r\n\r\n--\r\n# Ajax\r\nPara usar Ajax em nossa aplicação, podemos começar tanto do lado servidor, quanto do lado cliente.  \r\nNesse tutorial, optei por começar pelo lado servidor.  \r\n  \r\n--\r\n# O servlet\r\nNovamente, não é via de regra, mas para esse caso, irei criar um novo *Servlet* para tratar a requisição feita pelo cliente.  \r\nPara isso, basta clicar na raiz do **projeto**, **novo**, **servlet**  \r\nChamaremos o **Servlet** de **BuscaCidade** e colocaremos ele no **pacote** chamado **controle**.\r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img17.png\">](#)  \r\n  \r\nClique em `Próximo`.  \r\nDeixa selecionado a caixa `Adicionar informações ao descritor de implantação (web.xml)`.  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img18.png\">](#)  \r\n  \r\nClique em `Finalizar`.  \r\nAgora vamos editar o método **doGet**, pois para usarmos o Ajax, iremos usar o método **GET**.  \r\nPodemos retirar a linha que está lá.  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img19.png\">](#)  \r\n  \r\nPara realizarmos o processamento, devemos primeiro recuperar o dado sobre o estado que foi recebido, através do método `getParameter` pertencente a **request**.  \r\nComo o parâmetro passado pela página sera `uf`, vamos recuperá usando a seguinte linha:  \r\n  \r\n    String estado = request.getParameter(\"uf\");\r\n  \r\nAgora, nosso retorno será uma **string** também. Vamos inicializar ela com a string vazia.  \r\n  \r\n    String cidades = \"\";\r\n  \r\nComo iremos retornar a lista já para o usuário, em formato **html**, é legal falarmos qual será o charset do retorno.  \r\nPara isso, basta usar o método `setCharacterEncoding`.  \r\n  \r\n    response.setCharacterEncoding(\"UTF-8\");\r\n  \r\nCom o parâmetro já recebido e a nossa **string** de retorno já inicializada, temos que fazer o devido processamento agora, fazendo com o que o retorno sejam as cidades associadas ao estado.  \r\n  \r\n    if(estado.equals(\"SP\")){\r\n      cidades += \"<option value=\\\"São Paulo\\\">São Paulo</option>\";\r\n      cidades += \"<option value=\\\"São Roque\\\">São Roque</option>\";\r\n      cidades += \"<option value=\\\"Sorocaba\\\">Sorocaba</option>\";\r\n    }\r\n    if(estado.equals(\"RJ\")){\r\n      cidades += \"<option value=\\\"Angra dos reis\\\">Angra dos Reis</option>\";\r\n      cidades += \"<option value=\\\"Parati\\\">Parati</option>\";\r\n      cidades += \"<option value=\\\"Rio de Janeiro\\\">Rio de Janeiro</option>\";\r\n    }\r\n    if(estado.equals(\"SC\")){\r\n      cidades += \"<option value=\\\"Bandeirante\\\">Bandeirante</option>\";\r\n      cidades += \"<option value=\\\"Florianópolis\\\">Florianópolis</option>\";\r\n      cidades += \"<option value=\\\"Princesa\\\">Princesa</option>\";\r\n    }\r\n  \r\nCom tudo já feito, devemos retornar a **string** para o cliente, como já faríamos para qualquer outro **servlet**.  \r\n  \r\n    PrintWriter writer = response.getWriter();\r\n    writer.print(cidades);\r\n    writer.close();\r\n  \r\nFeito isso, nosso **servlet** deverá ficar da seguinte forma:  \r\n  \r\n    String estado = request.getParameter(\"uf\");\r\n    String cidades = \"\";\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    if(estado.equals(\"SP\")){\r\n      cidades += \"<option value=\\\"São Paulo\\\">São Paulo</option>\";\r\n      cidades += \"<option value=\\\"São Roque\\\">São Roque</option>\";\r\n      cidades += \"<option value=\\\"Sorocaba\\\">Sorocaba</option>\";\r\n    }\r\n    if(estado.equals(\"RJ\")){\r\n      cidades += \"<option value=\\\"Angra dos reis\\\">Angra dos Reis</option>\";\r\n      cidades += \"<option value=\\\"Parati\\\">Parati</option>\";\r\n      cidades += \"<option value=\\\"Rio de Janeiro\\\">Rio de Janeiro</option>\";\r\n    }\r\n    if(estado.equals(\"SC\")){\r\n      cidades += \"<option value=\\\"Bandeirante\\\">Bandeirante</option>\";\r\n      cidades += \"<option value=\\\"Florianópolis\\\">Florianópolis</option>\";\r\n      cidades += \"<option value=\\\"Princesa\\\">Princesa</option>\";\r\n    }\r\n    PrintWriter writer = response.getWriter();\r\n    writer.print(cidades);\r\n    writer.close();\r\n  \r\n# O cliente\r\n--\r\nCom nosso servidor já feito, agora nos resta fazer nosso cliente.  \r\nCertifique-se dos **ids** do campo `Estado` e `Cidade`, pois recuperaremos eles através do jQuery.  \r\nNo meu caso, o campo `Estado` está da seguinte forma:  \r\n  \r\n            <select name=\"estado\" id=\"estado\">\r\n                <option value=\"\" selected></option>\r\n                <option value=\"RJ\">RJ</option>\r\n                <option value=\"SP\">SP</option>\r\n                <option value=\"SC\">SC</option>\r\n            </select>\r\n  \r\nE o campo `Cidade` está da seguinte forma:  \r\n  \r\n            <select name=\"cidade\" id=\"cidade\">\r\n            </select>\r\n  \r\nNote que o campo o `Estado` possui uma opção vazia, apenas para que nenhum estado esteja pré-selecionado quando o usuário desejar se cadastrar, enquanto o campo `Cidade` não possui nenhuma opção, pois o servidor irá retornar as opções de acordo com o `Estado` que estiver selecionado.  \r\n  \r\nCom isso certificado, basta alterar o nosso **script**.  \r\nApós o seu **footer**, existe a tag **script** e dentro dela há:  \r\n  \r\n      $(document).ready(function(){\r\n              // alguns métodos de validação do form\r\n      }\r\n  \r\nAo final dos métodos de validação, mas ainda dentro do `$(document).ready`, devem estar as chamadas do nosso Ajax, que deverá ser chamado sempre que o valor do campo `Estado` for alterado. Para isso, devemos chamar nosso **Ajax** o valor do campo `Estado` for alterado, através do método `change`.  \r\n  \r\n        $('#estado').change(function(){\r\n            // ajax\r\n        }\r\n  \r\nPara usarmos Ajax no cliente, devemos lembrar sempre de:  \r\n  \r\n1. Qual método de envio das informações iremos usar?\r\n2. Qual o caminho para o nosso Servlet?\r\n3. Qual o formato dos dados iremos receber?\r\n4. Quais dados serão enviados?\r\n5. O quer fazer após o Servlet retornar as informações?\r\n  \r\nNo nosso caso:  \r\n  \r\n1. Como alteramos o método `doGet` no **Servlet**, devemos enviar usando **GET**.\r\n2. Como adicionamos no nosso arquivo `web.xml`, o caminho é, simplesmente, `BuscaCidade`.\r\n3. Os dados que o **Servlet** retorna são `HTMl`.\r\n4. O dado que será enviado é o valor do campo estado, sendo que o nome do parâmetro deve ser `uf`, como é esperado no **Servlet**.\r\n5. Preencher a lista de cidades associadas ao estado.\r\n  \r\nPara realizar isso, basta fazermos o seguinte:  \r\n  \r\n          $.ajax({\r\n            type: \"GET\",\r\n            url: \"BuscaCidade\",\r\n            dataType: \"html\",\r\n            data: {uf: $('#estado').val() }\r\n          }).done(function(data){\r\n            $('#cidade').html(data);\r\n          });\r\n  \r\nExplicando cada chave do *ajax*.  \r\n`type` é o método que será usado para o envio das informações para o servidor;  \r\n`url` é o caminho para o **Servlet** que irá responder a requisição;  \r\n`dataType` é o tipo de dado que o **Servlet** irá retornar;  \r\n`data` é um **json** com as chaves e valores que serão enviados para o servlet processar.  \r\nO método `.done` é o que irá preencher a lista de cidades com o valor retornado pela requisição **Ajax**, sendo que **data** é o que o servidor retornou.  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}